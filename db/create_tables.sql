CREATE TABLE IF NOT EXISTS role (
    id SERIAL PRIMARY KEY, 
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS project (
    id SERIAL PRIMARY KEY, 
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS status (
    id SERIAL PRIMARY KEY, 
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS task (
    id SERIAL PRIMARY KEY, 
    name VARCHAR(100) NOT NULL,
    description VARCHAR(255),
    status_id INTEGER NOT NULL  REFERENCES status(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS proma_user (
    id SERIAL PRIMARY KEY, 
    first_name VARCHAR(100), 
    last_name VARCHAR(100), 
    email VARCHAR(100) UNIQUE NOT NULL, 
    password VARCHAR(100) NOT NULL,
    created_on DATE NOT NULL DEFAULT CURRENT_DATE,
    is_admin BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS user_task (
    id SERIAL PRIMARY KEY, 
    proma_user_id INTEGER NOT NULL REFERENCES proma_user(id) ON DELETE CASCADE,
    task_id INTEGER NOT NULL REFERENCES task(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS project_task (
    id SERIAL PRIMARY KEY, 
    task_id INTEGER NOT NULL REFERENCES task(id) ON DELETE CASCADE,
    project_id INTEGER NOT NULL REFERENCES project(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user_project (
    id SERIAL PRIMARY KEY, 
    proma_user_id INTEGER NOT NULL REFERENCES proma_user(id) ON DELETE CASCADE,
    project_id INTEGER NOT NULL REFERENCES project(id) ON DELETE CASCADE,
    role_id INTEGER NOT NULL REFERENCES role(id) ON DELETE CASCADE
);
